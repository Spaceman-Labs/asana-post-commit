#!/bin/bash

# modified from http://brunohq.com/journal/speed-project-git-hook-for-asana/
#
# Added Bitbucket and GitHub links to Asana commits
# modified by Richard Sumilang <me@richardsumilang.com>
# modified by Andrew Bennett <andrew@pixid.com>

# -----------------------
# necessary configuration:
# git config --global user.asana-token "MY_ASANA_PERSONAL_ACCESS_TOKEN" (http://app.asana.com/-/account_api)
# -----------------------

access_token=$(git config user.asana-token)

# defaults
if [ $access_token == "" ]; then
    exit 0
fi

# Find repository host
for repository in $(git remote -v | awk '{ print $2 }'); do
    scheme="$(echo $repository | grep :// | sed -e's,^\(.*://\).*,\1,g')"
    url="$(echo ${repository/$scheme/})"
    user="$(echo $url | grep @ | cut -d@ -f1)"
    if [[ $scheme == "" ]]; then
        host="$(echo ${url/$user@/} | cut -d: -f1)"
        path="$(echo $url | grep : | cut -d: -f2-)"
    else
        host="$(echo ${url/$user@/} | cut -d/ -f1)"
        path="$(echo $url | grep / | cut -d/ -f2-)"
    fi
    project="$(echo ${path%.*})"

    # Bitbucket or GitHub
    if [[ $host == "bitbucket.org" ]]; then
        commit_url="https://bitbucket.org/$project/commits/"
        break;
    elif [[ $host == "github.com" ]]; then
        commit_url="https://github.com/$project/commit/"
        break;
    else
        commit_url=""
    fi
done

# hold the closed ticket numbers
declare -a closed
# hold the ticket numbers that are not closed, just touched
declare -a referenced
# track whether we're currently closing tickets or just referencing them
closes='NO'

# regex pattern to recognize a story number
taskid_pattern='#([0-9]*)'
# regex pattern to recognize a "closing this ticket" word
closes_pattern='([Ff]ix|[Cc]lose|[Cc]losing)'
# regex pattern to recognize an "and" word (eg "fixes #1, #2, and #3")
and_pattern='([Aa]nd|&)'

# get the checkin comment for parsing
comment=$(git log --pretty=format:"%B" -n1 | tr '\n' ' ')
if [[ $commit_url == "" ]]; then
    print_comment=$(git log -n1 --pretty=format:"Committed %h to $(git rev-parse --abbrev-ref --quiet HEAD) on $repository:%n<code>%B</code>")
else
    print_comment=$(git log -n1 --pretty=format:"Committed to $(git rev-parse --abbrev-ref --quiet HEAD): $commit_url%H%n<code>%B</code>")
fi

# break the commit comment down into words
IFS=' ' read -a words <<< "$comment"

found_task_id=false
for element in "${words[@]}"
do
    # if we have a task id, save it to the appropriate array
    if [[ $element =~ $taskid_pattern ]]; then
        if [ "${closes}" == "YES" ]; then
            closed=("${closed[@]}" "${BASH_REMATCH[1]}")
        fi
        referenced=("${referenced[@]}" "${BASH_REMATCH[1]}")
        found_task_id=true
    # or else if we have a "closes" word, set the tracking bool accordingly
    elif [[ $element =~ $closes_pattern ]]; then
        closes='YES'
    # and if we don't, set us back to referencing
    # (if we're an "and", don't change any state)
    elif [[ ! $element =~ $and_pattern ]]; then
        closes='NO'
    fi
done

# if task id not found in comment, then look for it in the branch name
if [ "$found_task_id" = false ]; then
    # get task id from branch name. Then send a comment request if task_id exists.
	task_id=$(git branch | grep '*' | sed 's/^..//' | grep -o '#.*' | sed 's/^.//')
	if [ "$task_id" ]; then
    	curl -u ${apikey}: https://app.asana.com/api/1.0/tasks/${task_id}/stories \
       		-d "text=${print_comment}" > /dev/null 2>&1
	fi
fi

# touch the stories we've referenced
for element in "${referenced[@]}"; do
    curl \
        -H "Authorization: Bearer ${access_token}" \
        -X POST \
        --data-urlencode "html_text=${print_comment}" \
        "https://app.asana.com/api/1.0/tasks/${element}/stories" \
        > /dev/null 2>&1
done

# close the tasks we've fixed
for element in "${closed[@]}"
do
    curl \
        -H "Authorization: Bearer ${access_token}" \
        -X PUT \
        --data-urlencode "completed=true" \
        "https://app.asana.com/api/1.0/tasks/${element}" \
        > /dev/null 2>&1
done
