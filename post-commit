#!/bin/bash

# modified from http://brunohq.com/journal/speed-project-git-hook-for-asana/

# -----------------------
# necessary configuration:
# git config --global user.asana-key "MY_ASANA_API_KEY" (http://app.asana.com/-/account_api)
#
# not necessary at the moment, but may be useful in future revisions of the script:
# git config --local user.asana-workspace "WORKSPACE_ID" (found in the URL)
# git config --local user.asana-project "PROJECT_ID" (found in the URL)
# -----------------------

apikey=$(git config user.asana-key)
display_branch_name=true
comment_by_branch_task_id=true
if [ $apikey == '' ] ; then exit 0; fi

# hold the closed ticket numbers
declare -a closed
# hold the ticket numbers that are not closed, just touched
declare -a referenced
# track whether we're currently closing tickets or just referencing them
closes='NO'

# regex pattern to recognize a story number
taskid_pattern='#([0-9]*)'
# regex pattern to recognize a "closing this ticket" word
closes_pattern='([Ff]ix|[Cc]lose|[Cc]losing)'
# regex pattern to recognize an "and" word (eg "fixes #1, #2, and #3")
and_pattern='([Aa]nd|&)'

# get the checkin comment for parsing
comment=$(git log --pretty=format:"%s %b" -n1)
repo=${PWD##*/}

# get branch name and display in the comment
branch_message=""
if [ "$display_branch_name" = true ]; then
    branch=$(git branch | grep '*' | sed 's/^..//')
    branch_message=" in branch $branch"
fi

print_comment=$(git log --pretty=format:"Just committed %h with message:
\"%s\"
to repository $repo$branch_message" -n1)

# break the commit comment down into words
IFS=' ' read -a words <<< "$comment"

for element in "${words[@]}"
do
    # if we have a task id, save it to the appropriate array
    if [[ $element =~ $taskid_pattern ]]; then
        if [ "${closes}" == "YES" ]; then
            closed=("${closed[@]}" "${BASH_REMATCH[1]}")
        fi
        referenced=("${referenced[@]}" "${BASH_REMATCH[1]}")
    # or else if we have a "closes" word, set the tracking bool accordingly
    elif [[ $element =~ $closes_pattern ]]; then
        closes='YES'
    # and if we don't, set us back to referencing
    # (if we're an "and", don't change any state)
    elif [[ ! $element =~ $and_pattern ]]; then
        closes='NO'
    fi
done

# get task id from branch name. Then send a comment request if task_id exists
task_id=$(git branch | grep '*' | sed 's/^..//' | grep -o '#.*' | sed 's/^.//')
if [[ "$task_id" && "$comment_by_branch_task_id" = true ]]; then
    curl -u ${apikey}: https://app.asana.com/api/1.0/tasks/${task_id}/stories \
         -d "text=${print_comment}" > /dev/null 2>&1
fi

# touch the stories we've referenced
for element in "${referenced[@]}"
do
    curl -u ${apikey}: https://app.asana.com/api/1.0/tasks/${element}/stories \
         -d "text=${print_comment}" > /dev/null 2>&1
done

# close the tasks we've fixed
for element in "${closed[@]}"
do
    curl --request PUT -u ${apikey}: https://app.asana.com/api/1.0/tasks/${element} \
         -d "completed=true" > /dev/null 2>&1
done
